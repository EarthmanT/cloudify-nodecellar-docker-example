tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-docker-plugin/1.1/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.1/plugin.yaml

inputs:
  image:
    description: >
      The OpenStack image ID 
    default: 8c096c29-a666-4b82-99c4-c77dc70cfb40

  flavor:
    description: >
      The OpenStack flavor
    default: 102

  agent_user:
    description: >
      User name used when SSH-ing into the started machine
    default: ubuntu

node_types:  

  mongo_database:
    derived_from: cloudify.nodes.DBMS
    properties:
      role:
        description: MongoDB role
      port:
        description: MongoDB port
      web_port:
        description: MongoDB web console port

  nodecellar_app:
    derived_from: cloudify.nodes.ApplicationServer
    properties:
      port:
        description: Web application port
        type: integer

node_templates:
  vm:
    type: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
          user: { get_input: agent_user }
          home_dir: /home/ubuntu
      server:
          image: { get_input: image }
          flavor: { get_input: flavor }

    relationships:
      - target: nodecellar_security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: mongod_security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: nodecellar_floatingip
        type: cloudify.openstack.server_connected_to_floating_ip

  nodecellar_container:
    type: cloudify.docker.Container
    properties:
      name: nodecellar
      image:
        repository: uric/nodecellar
      ports:
        8080: 8080
      params:
        stdin_open: true
        tty: true
        command: nodejs server.js
        environment:
          NODECELLAR_PORT: 8080
          MONGO_PORT: 27017
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm
      - type: cloudify.relationships.connected_to
        target: mongod_container
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: nodecellar-scripts/preconfigure.py

  mongod_container:
    type: cloudify.docker.Container
    properties:
      name: mongod
      image:
        repository: dockerfile/mongodb
      ports:
        27017: 27017
        28017: 28017
      params:
        stdin_open: true
        tty: true
        command: mongod --rest --httpinterface --smallfiles
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm

  nodecellar_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: nodecellar-security-group-docker
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 8080
        - remote_ip_prefix: 0.0.0.0/0
          port: 22

  mongod_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: mongod-security-group-docker
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 27017
        - remote_ip_prefix: 0.0.0.0/0
          port: 28017
        - remote_ip_prefix: 0.0.0.0/0
          port: 22

  nodecellar_floatingip:
    type: cloudify.openstack.nodes.FloatingIP

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodecellar_floatingip, floating_ip_address ] }
      port: 8080
